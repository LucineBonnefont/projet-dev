---
title: "√âtude"
css: styles/custom.css

---
![ ](images/logo.png){style="position: absolute; top: 20px; left: 20px; width: 150px; height: auto;"}

<div class="etude-section">

### üö¥ Quels sont les quartiers de Montpellier les plus adeptes du v√©lo ?  

Avec une prise de conscience √©cologique croissante, de plus en plus d‚Äôhabitants se tournent vers des modes de transport respectueux de l‚Äôenvironnement. Mais **quels quartiers de Montpellier montrent l‚Äôexemple en adoptant le v√©lo au quotidien ?**  

### üìä √âtude des intensit√©s moyennes de trafic  
Nous avons analys√© les intensit√©s moyennes de trafic pour les mois de juin √† novembre, comparant les donn√©es de **2022** et **2024**. Cette √©tude vise √† identifier les tendances cyclistes et les quartiers les plus actifs.  
  
  - Les quartiers comme **H√¥pitaux-Facult√©s** et **Port Marianne** se d√©marquent par des valeurs √©lev√©es en 2022, mais montrent une baisse significative en 2024 :
    - *H√¥pitaux-Facult√©s* : 730.11 ‚Üí 724.07  
    - *Port Marianne* : 943.00 ‚Üí 812.28  
  - Les quartiers **Croix d'Argent** et **Centre** enregistrent √©galement une diminution, mais restent parmi les zones avec des intensit√©s √©lev√©es.  
  - Les secteurs comme **Pr√©s d'Ar√®nes** et **Mosson** ont des valeurs relativement faibles, avec une baisse marqu√©e en 2024.  


```{python}

import geopandas as gpd
import pandas as pd
import matplotlib.pyplot as plt
from shapely.geometry import Point

# Charger les donn√©es des quartiers (GeoJSON ou shapefile)
quartiers_gdf = gpd.read_file('VilleMTP_MTP_Quartiers.json')

def calculer_intensite_moyenne(file_path, quartiers_gdf):
    # Charger les donn√©es de v√©lo avec les intensit√©s et dates
    df_velo = pd.read_json(file_path)

    # Extraire les coordonn√©es de latitude et longitude des points
    df_velo['longitude'] = df_velo['location'].apply(lambda x: x['coordinates'][0])
    df_velo['latitude'] = df_velo['location'].apply(lambda x: x['coordinates'][1])

    # Cr√©er la colonne geometry pour le GeoDataFrame
    geometry = [Point(xy) for xy in zip(df_velo['longitude'], df_velo['latitude'])]
    gdf_velo = gpd.GeoDataFrame(df_velo, geometry=geometry, crs=quartiers_gdf.crs)

    # Associer les points de v√©lo aux quartiers
    gdf_joined = gpd.sjoin(gdf_velo, quartiers_gdf, how="inner", predicate="intersects")

    # Calculer la moyenne journali√®re par quartier et par date
    gdf_joined['start_date'] = gdf_joined['dateObserved'].apply(lambda x: x.split('/')[0])
    gdf_joined['start_date'] = pd.to_datetime(gdf_joined['start_date'])

    moyennes_quartiers = (
        gdf_joined.groupby(['name', 'start_date'])
        .agg({'intensity': 'mean'})
        .reset_index()
    )

    # Fusionner avec les donn√©es des quartiers pour les visualisations
    return quartiers_gdf.merge(
        moyennes_quartiers.groupby('name').agg({'intensity': 'mean'}).reset_index(),
        on='name',
        how='left'
    )

# Calculer les intensit√©s pour 2023 et 2024
quartiers_gdf_2022 = calculer_intensite_moyenne('6_2022.json', quartiers_gdf.copy())
quartiers_gdf_2024 = calculer_intensite_moyenne('6_2024.json', quartiers_gdf.copy())

#print(quartiers_gdf_2022)
#print(quartiers_gdf_2024)
# Trouver la plage commune des intensit√©s
intensite_min = min(quartiers_gdf_2022['intensity'].min(), quartiers_gdf_2024['intensity'].min())
intensite_max = max(quartiers_gdf_2022['intensity'].max(), quartiers_gdf_2024['intensity'].max())

# Cr√©ation de la figure avec deux sous-cartes
fig, axes = plt.subplots(1, 2, figsize=(18, 8), subplot_kw={'aspect': 'equal'})

# Visualisation des intensit√©s pour 2022
quartiers_gdf_2022.plot(
    column='intensity',
    cmap='Reds',
    legend=False,  # D√©sactiver la l√©gende ici
    ax=axes[0],
    vmin=intensite_min,
    vmax=intensite_max
)
axes[0].set_title("Intensit√© moyenne du trafic - 2022")
for x, y, label in zip(
    quartiers_gdf_2022.geometry.centroid.x,
    quartiers_gdf_2022.geometry.centroid.y,
    quartiers_gdf_2022['name']
):
    axes[0].text(x, y, label, fontsize=8, ha='center', color='black')

# Visualisation des intensit√©s pour 2024
quartiers_gdf_2024.plot(
    column='intensity',
    cmap='Reds',
    legend=False,  # D√©sactiver la l√©gende ici
    ax=axes[1],
    vmin=intensite_min,
    vmax=intensite_max
)
axes[1].set_title("Intensit√© moyenne du trafic - 2024")
for x, y, label in zip(
    quartiers_gdf_2024.geometry.centroid.x,
    quartiers_gdf_2024.geometry.centroid.y,
    quartiers_gdf_2024['name']
):
    axes[1].text(x, y, label, fontsize=8, ha='center', color='black')

# Ajouter une l√©gende commune
cbar_ax = fig.add_axes([0.92, 0, 0.02, 0.95])  # Position de la barre de couleur
sm = plt.cm.ScalarMappable(cmap='Reds', norm=plt.Normalize(vmin=intensite_min, vmax=intensite_max))
cbar = fig.colorbar(sm, cax=cbar_ax)
cbar.set_label("Intensit√© moyenne", fontsize=12)

plt.tight_layout(rect=[0, 0, 0.9, 1])  # Ajuster pour laisser la place √† la l√©gende

# Sauvegarder l'image de la carte
plt.savefig('intensite_traffics_map.png', dpi=300)
plt.close()
```
### üåü **Quel quartier sera en t√™te du mouvement √©cologique ?**  

**Et si c‚Äô√©tait le v√¥tre ?** Inspirons-nous les uns les autres pour faire de **Montpellier** une ville toujours plus verte et accueillante pour les cyclistes ! üåø  

</div>



```{python}
import numpy as np
import pandas as pd
import plotly.graph_objects as go

# Chargement du Fichier CSV
data2 = pd.read_csv('data/MMM_MMM_GeolocCompteurs.csv')

# Conversion des Colonnes de Latitude et Longitude au Format Num√©rique
data2['Latitude'] = pd.to_numeric(data2['Latitude'], errors='coerce')
data2['Longitude'] = pd.to_numeric(data2['Longitude'], errors='coerce')

# Cr√©ation de la figure Plotly
fig = go.Figure()

# Ajout des points sur le graphique avec des infobulles
fig.add_trace(go.Scatter(
    x=data2['Longitude'],
    y=data2['Latitude'],
    text=data2.apply(lambda row: f"{row['Nom du com']} ({row['N¬∞ S√©rie']} v√©los)", axis=1),
    mode='markers',
    marker=dict(
        size=8,
        color=np.linspace(0, 1, len(data2)),  # Utilisation de linspace pour g√©n√©rer des couleurs diff√©rentes
        colorscale='Rainbow',
        showscale=True
    )
))

# Mise en page du graphique
fig.update_layout(
    title='Localisation des Compteurs de V√©lo √† Montpellier',
    xaxis_title='Longitude',
    yaxis_title='Latitude',
    annotations=[
        dict(
            x=0.5,
            y=-0.1,
            xref='paper',
            yref='paper',
            text="Les points repr√©sentent les compteurs de v√©lo et leurs positions exactes tout au long de Montpellier.",
            showarrow=False,
            font=dict(size=12)
        )
    ]
)

# Sauvegarder la figure dans un fichier HTML
html_file = "OCP.html"
fig.write_html(html_file)

#'2023-01-01'

```

## Visualisation des Compteurs de V√©lo

<iframe
    src="OCP.html"
    width="100%"
    height="600px"
    frameborder="0"
    scrolling="no">
</iframe>


<footer>
  <p>
    &copy; 2024 MONTPELLI'CYCLE. This project is licensed under the 
    <a href="license.html" target="_blank" style="color: #00bfff;">MIT License</a>.
  </p>
</footer>
